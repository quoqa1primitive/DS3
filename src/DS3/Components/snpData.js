const rawData1 = `3386.15
3386.15
3373.23
3337.75
3225.89
3128.21
3116.39
2978.76
2954.22
3090.23
3003.37
3130.12
3023.94
2972.37
2746.56
2882.23
2741.38
2480.64
2711.02
2386.13
2529.19
2398.1
2409.39
2304.92
2237.4
2447.33
2475.56
2630.07
2541.47
2626.65
2584.59
2470.5
2526.9
2488.65
2663.68
2659.41
2749.98
2789.82
2761.63
2846.06
2783.36
2799.55
2874.56
2823.16
2736.56
2799.31
2797.8
2836.74
2878.48
2863.39
2939.51
2912.43
2830.71
2842.74
2868.44
2848.42
2881.19
2929.8
2930.32
2870.12
2820
2852.5
2863.7
2953.91
2922.94
2971.61
2948.51
2955.45
2991.77
3036.13
3029.73
3044.31
3055.73
3080.82
3122.87
3112.35
3193.93
3232.39
3207.18
3190.14
3002.1
3041.31
3066.59
3124.74
3113.49
3115.34
3097.74
3117.86
3131.29
3050.33
3083.76
3009.05
3053.24
3100.29
3115.86
3130.01
3179.72
3145.32
3169.94
3152.05
3185.04
3155.22
3197.52
3226.56
3215.57
3224.73
3251.84
3257.3
3276.02
3235.66
3215.63
3239.41
3218.44
3258.44
3246.22
3271.12
3294.61
3306.51
3327.77
3349.16
3351.28
3360.47
3333.69
3380.35
3373.43
3372.85
3381.99
3389.78`;

const rawData2 = `4536.95
4536.95
4535.43
4520.03
4514.07
4493.28
4458.58
4468.73
4443.05
4480.7
4473.75
4432.99
4357.73
4354.19
4395.64
4448.98
4455.48
4443.11
4352.63
4359.46
4307.54
4357.04
4300.46
4345.72
4363.55
4399.76
4391.34
4361.19
4350.65
4363.8
4438.26
4471.37
4486.46
4519.63
4536.19
4549.78`;

const rawData3 = `4704.54
4704.54
4697.96
4682.94
4690.7
4701.46
4594.62
4655.27
4567
4513.04
4577.1
4538.43
4591.67
4686.75
4701.21
4667.45
4712.02`;

const rawDate1 = `drop start
2020. 2. 19
2020. 2. 20
2020. 2. 21
2020. 2. 24
2020. 2. 25
2020. 2. 26
2020. 2. 27
2020. 2. 28
2020. 3. 2
2020. 3. 3
2020. 3. 4
2020. 3. 5
2020. 3. 6
2020. 3. 9
2020. 3. 10
2020. 3. 11
2020. 3. 12
2020. 3. 13
2020. 3. 16
2020. 3. 17
2020. 3. 18
2020. 3. 19
2020. 3. 20
2020. 3. 23
2020. 3. 24
2020. 3. 25
2020. 3. 26
2020. 3. 27
2020. 3. 30
2020. 3. 31
2020. 4. 1
2020. 4. 2
2020. 4. 3
2020. 4. 6
2020. 4. 7
2020. 4. 8
2020. 4. 9
2020. 4. 13
2020. 4. 14
2020. 4. 15
2020. 4. 16
2020. 4. 17
2020. 4. 20
2020. 4. 21
2020. 4. 22
2020. 4. 23
2020. 4. 24
2020. 4. 27
2020. 4. 28
2020. 4. 29
2020. 4. 30
2020. 5. 1
2020. 5. 4
2020. 5. 5
2020. 5. 6
2020. 5. 7
2020. 5. 8
2020. 5. 11
2020. 5. 12
2020. 5. 13
2020. 5. 14
2020. 5. 15
2020. 5. 18
2020. 5. 19
2020. 5. 20
2020. 5. 21
2020. 5. 22
2020. 5. 26
2020. 5. 27
2020. 5. 28
2020. 5. 29
2020. 6. 1
2020. 6. 2
2020. 6. 3
2020. 6. 4
2020. 6. 5
2020. 6. 8
2020. 6. 9
2020. 6. 10
2020. 6. 11
2020. 6. 12
2020. 6. 15
2020. 6. 16
2020. 6. 17
2020. 6. 18
2020. 6. 19
2020. 6. 22
2020. 6. 23
2020. 6. 24
2020. 6. 25
2020. 6. 26
2020. 6. 29
2020. 6. 30
2020. 7. 1
2020. 7. 2
2020. 7. 6
2020. 7. 7
2020. 7. 8
2020. 7. 9
2020. 7. 10
2020. 7. 13
2020. 7. 14
2020. 7. 15
2020. 7. 16
2020. 7. 17
2020. 7. 20
2020. 7. 21
2020. 7. 22
2020. 7. 23
2020. 7. 24
2020. 7. 27
2020. 7. 28
2020. 7. 29
2020. 7. 30
2020. 7. 31
2020. 8. 3
2020. 8. 4
2020. 8. 5
2020. 8. 6
2020. 8. 7
2020. 8. 10
2020. 8. 11
2020. 8. 12
2020. 8. 13
2020. 8. 14
2020. 8. 17
2020. 8. 18`;

const rawDate2 = `drop start
2021. 9. 2
2021. 9. 3
2021. 9. 7
2021. 9. 8
2021. 9. 9
2021. 9. 10
2021. 9. 13
2021. 9. 14
2021. 9. 15
2021. 9. 16
2021. 9. 17
2021. 9. 20
2021. 9. 21
2021. 9. 22
2021. 9. 23
2021. 9. 24
2021. 9. 27
2021. 9. 28
2021. 9. 29
2021. 9. 30
2021. 10. 1
2021. 10. 4
2021. 10. 5
2021. 10. 6
2021. 10. 7
2021. 10. 8
2021. 10. 11
2021. 10. 12
2021. 10. 13
2021. 10. 14
2021. 10. 15
2021. 10. 18
2021. 10. 19
2021. 10. 20
2021. 10. 21`;

const rawDate3 = `drop start
2021. 11. 18
2021. 11. 19
2021. 11. 22
2021. 11. 23
2021. 11. 24
2021. 11. 26
2021. 11. 29
2021. 11. 30
2021. 12. 1
2021. 12. 2
2021. 12. 3
2021. 12. 6
2021. 12. 7
2021. 12. 8
2021. 12. 9
2021. 12. 10
2021. 12. 13
2021. 12. 14
2021. 12. 15
2021. 12. 16
2021. 12. 17
2021. 12. 20
2021. 12. 21
2021. 12. 22
2021. 12. 23
2021. 12. 27
2021. 12. 28
2021. 12. 29`;

const bfr1 = `3257.85
3234.85
3246.28
3237.18
3253.05
3274.7
3265.35
3288.13
3283.15
3289.29
3316.81
3329.62
3320.79
3321.75
3325.54
3295.47
3243.63
3276.24
3273.4
3283.66
3225.52
3248.92
3297.59
3334.69
3345.78
3327.71
3352.09
3357.75
3379.45
3373.94
3380.16
3370.29
3386.15`;
const aftr1bfr2 = `3389.78
3374.85
3385.51
3397.16
3431.28
3443.62
3478.73
3484.55
3508.01
3500.31
3526.65
3580.84
3455.06
3426.96
3331.84
3398.96
3339.19
3340.97
3383.54
3401.2
3385.49
3357.01
3319.47
3281.06
3315.57
3236.92
3246.59
3298.46
3351.6
3335.47
3363
3380.8
3348.44
3408.63
3360.95
3419.45
3446.83
3477.13
3534.22
3511.93
3488.67
3483.34
3483.81
3426.92
3443.12
3435.56
3453.49
3465.39
3400.97
3390.68
3271.03
3310.11
3269.96
3310.24
3369.16
3443.44
3510.45
3509.44
3550.5
3545.53
3572.66
3537.01
3585.15
3626.91
3609.53
3567.79
3581.87
3557.54
3577.59
3635.41
3629.65
3638.35
3621.63
3662.45
3669.01
3666.72
3699.12
3691.96
3702.25
3672.82
3668.1
3663.46
3647.49
3694.62
3701.17
3722.48
3709.41
3694.92
3687.26
3690.01
3703.06
3735.36
3727.04
3732.04
3756.07
3700.65
3726.86
3748.14
3803.79
3824.68
3799.61
3801.19
3809.84
3795.54
3768.25
3798.91
3851.85
3853.07
3841.47
3855.36
3849.62
3750.77
3787.38
3714.24
3773.86
3826.31
3830.17
3871.74
3886.83
3915.59
3911.23
3909.88
3916.38
3934.83
3932.59
3931.33
3913.97
3906.71
3876.5
3881.37
3925.43
3829.34
3811.15
3901.82
3870.29
3819.72
3768.47
3841.94
3821.35
3875.44
3898.81
3939.34
3943.34
3968.94
3962.71
3974.12
3915.46
3913.1
3940.59
3910.52
3889.14
3909.52
3974.54
3971.09
3958.55
3972.89
4019.87
4077.91
4073.94
4079.95
4097.17
4128.8
4127.99
4141.59
4124.66
4170.42
4185.47
4163.26
4134.94
4173.42
4134.98
4180.17
4187.62
4186.72
4183.18
4211.47
4181.17
4192.66
4164.66
4167.59
4201.62
4232.6
4188.43
4152.1
4063.04
4112.5
4173.85
4163.29
4127.83
4115.68
4159.12
4155.86
4197.05
4188.13
4195.99
4200.88
4204.11
4202.04
4208.12
4192.85
4229.89
4226.52
4227.26
4219.55
4239.18
4247.44
4255.15
4246.59
4223.7
4221.86
4166.45
4224.79
4246.44
4241.84
4266.49
4280.7
4290.61
4291.8
4297.5
4319.94
4352.34
4343.54
4358.13
4320.82
4369.55
4384.63
4369.21
4374.3
4360.03
4327.16
4258.49
4323.06
4358.69
4367.48
4411.79
4422.3
4401.46
4400.64
4419.15
4395.26
4387.16
4423.15
4402.66
4429.1
4436.52
4432.35
4436.75
4447.7
4460.83
4468
4479.71
4448.08
4400.27
4405.8
4441.67
4479.53
4486.23
4496.19
4470
4509.37
4528.79
4522.68
4536.95`;
const aftr2bfr3 = `4549.78
4544.9
4566.48
4574.79
4551.68
4596.42
4605.38
4613.67
4630.65
4660.57
4680.06
4697.53
4701.7
4685.25
4646.71
4649.27
4682.85
4682.8
4700.9
4704.54`;
const aftr3 = `4712.02
4668.97
4634.09
4709.85
4668.67
4620.64
4568.02
4649.23
4696.56
4725.79
4791.19
4786.35
4793.06
4778.73
4766.18
4796.56
4793.54
4700.58
4696.05
4677.03
4670.29
4713.07
4726.35
4659.03
4662.85
4577.11
4532.76
4482.73
4397.94
4410.13
4356.45
4349.93
4326.51
4431.85`;


var shrink = function( value ) {
    return (Number(value) - 3000) / 20;
  };

var normalize = function( mark, firstV, target ) {
  const normalized = target -firstV + mark;
  return normalized;
};

const rawArr1 = rawData1.split(/\r\n|\r|\n/);
const adjustedArr1 = rawArr1.map(shrink);


const rawArr2 = rawData2.split(/\r\n|\r|\n/);
const adjustedArr2 = rawArr2.map(shrink);
// const adjustedArr2 = beforeNormArr2.map(x=>normalize(adjustedArr1[0], beforeNormArr2[0], x));


const rawArr3 = rawData3.split(/\r\n|\r|\n/);
const adjustedArr3 = rawArr3.map(shrink);
// const adjustedArr3 = beforeNormArr3.map(x=>normalize(adjustedArr1[0], beforeNormArr3[0], x));


const rawB1 = bfr1.split(/\r\n|\r|\n/);
const rawA1B2 = aftr1bfr2.split(/\r\n|\r|\n/);
const rawA2B3 = aftr2bfr3.split(/\r\n|\r|\n/);
const rawA3 = aftr3.split(/\r\n|\r|\n/);

const adjustedB1 = rawB1.map(shrink);
const adjustedA1B2 = rawA1B2.map(shrink);
const adjustedA2B3 = rawA2B3.map(shrink);
const adjustedA3 = rawA3.map(shrink);


const date1 = rawDate1.split(/\r\n|\r|\n/);
const date2 = rawDate2.split(/\r\n|\r|\n/);
const date3 = rawDate3.split(/\r\n|\r|\n/);
function refining(rawArr, date) {
  const len = rawArr.length;
  const arr = Array.from(Array(len), () => new Array(2));
  for (let i=0; i<rawArr.length; i++) {
    arr[i][0] = rawArr[i];
    arr[i][1] = date[i];
  }
  return(
    arr
  )
}
const arr1 = refining(rawArr1, date1);
const arr2 = refining(rawArr2, date2);
const arr3 = refining(rawArr3, date3);
export {adjustedArr1, adjustedArr2, adjustedArr3, arr1, arr2, arr3, adjustedB1, adjustedA1B2, adjustedA2B3, adjustedA3};